{"version":3,"file":"static/3912.d6934849.chunk.js","mappings":"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","sources":["webpack://plugin-progressive-delivery/./src/components/ProgressiveDeliveryComponent/ProgressiveDeliveryComponent.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { DependencyGraph, DependencyGraphTypes, InfoCard } from '@backstage/core-components';\nimport { useEntity } from '@backstage/plugin-catalog-react';\nimport { makeStyles } from '@material-ui/core/styles';\n\ninterface SaasPromotionsData {\n    nodes: string[];\n    edges: [string, string][];\n}\n\ninterface Node {\n    app: string;\n    saas: string;\n    resourceTemplate: string;\n    target: string | undefined;\n    cluster: string | undefined;\n    namespace: string | undefined;\n    isTest: boolean;\n    commit_sha: string | undefined;\n    deployment_state: \"success\" | \"missing\" | \"failed\" | undefined;\n}\n\ninterface Edge {\n    from: Node;\n    to: Node;\n}\n\nexport const TopologyComponent = () => {\n  const [topo, setTopo] = useState(\"{}\");\n  \n  useEffect(() => {\n    fetch(\"http://localhost:7007/api/progressive-delivery/topo\")\n      .then(response => {\n        console.log(response);\n        return response.text();\n      })\n      .then(data => {\n        console.log(data);\n        return setTopo(data);\n      })\n  }, [])\n\n  const name = useEntity().entity.metadata.name.toLowerCase();\n\n  if (topo !== \"{}\") {\n    try {\n      var rawData: SaasPromotionsData = JSON.parse(topo);\n    } catch {\n      return (\n      <InfoCard title=\"Progressive Delivery Topology\">\n        Error parsing json\n      </InfoCard>);\n    }\n\n    const edges: DependencyGraphTypes.DependencyEdge[] = rawData.edges.map(([f, t]) => ({\n      from: JSON.parse(f),\n      to: JSON.parse(t)\n    }))   \n    .filter(({from, to}: Edge) => from.app.toLowerCase() === name.toLowerCase() || to.app.toLowerCase() === name.toLowerCase())\n    .map(({from, to}: Edge) => (\n      {from: JSON.stringify(from), to: JSON.stringify(to)})\n    );\n\n    let nodes: DependencyGraphTypes.DependencyNode[] = rawData.nodes.map(node => JSON.parse(node))\n    .filter((n: Node) => n.app.toLowerCase() == name.toLowerCase())\n    .map((n: Node) => ({id: JSON.stringify(n)}));\n\n    edges.forEach((e: DependencyGraphTypes.DependencyEdge) => {\n      nodes.push({id: e.from});\n      nodes.push({id: e.to});\n    });\n\n    return (\n      <InfoCard title=\"Progressive Delivery Topology\">\n        <DependencyGraph \n          nodes={nodes} \n          edges={edges} \n          showArrowHeads={true} \n          renderNode={CustomNodeRenderer} \n          direction={DependencyGraphTypes.Direction.LEFT_RIGHT}/>\n      </InfoCard>\n    );\n  } else {\n    return (\n      <InfoCard title=\"Progressive Delivery Topology\">\n        Processing ...\n      </InfoCard>\n    );\n  }\n}\n\nfunction CustomNodeRenderer({ node: { id } }: DependencyGraphTypes.RenderNodeProps) {\n  const [width, setWidth] = React.useState(0);\n  const [height, setHeight] = React.useState(0);\n  const idRef = React.useRef<SVGTextElement | null>(null);\n\n  React.useLayoutEffect(() => {\n    // set the width to the length of the ID\n    if (idRef.current) {\n      let { height: renderedHeight, width: renderedWidth } =\n        idRef.current.getBBox();\n      renderedHeight = Math.round(renderedHeight);\n      renderedWidth = Math.round(renderedWidth);\n\n      if (renderedHeight !== height || renderedWidth !== width) {\n        setWidth(renderedWidth);\n        setHeight(renderedHeight);\n      }\n    }\n  }, [width, height]);\n\n  const padding = 10;\n  const paddedWidth = width + padding * 2;\n  const paddedHeight = height + padding * 2;\n\n  let node: Node = JSON.parse(id);\n  let sha: string = \"none\";\n  if (node.commit_sha) {\n    sha = node.commit_sha.length >= 32? node.commit_sha?.substring(0,7) : node.commit_sha!;\n  }\n  let dep: string = node.deployment_state == \"success\" ? '✅' : '❌';\n  const num_of_bolds: number = 1;\n  let label: string[] = [\n    `${node.resourceTemplate}/${node.target}`,\n    `on ${node.cluster}/${node.namespace} (${node.saas})`,\n    `${sha} ${dep}`,\n  ];\n  let tspans = label.map((l, i) => {\n    return (\n      <tspan\n        x={paddedWidth / 2}\n\n        // We can't use paddedHeight because we'll recalculate the height while\n        // adding to the height, which causes an infinite loop.\n        y={(i+1) * 2 * padding}\n        fontWeight={i < num_of_bolds ? \"bold\" : \"normal\"}\n      >\n        {l}\n      </tspan>);\n  });\n\n  const classes = useStyles({ isTest: node.isTest });\n  return (\n    <g>\n      <rect\n        className={classes.node}\n        width={paddedWidth}\n        height={paddedHeight}\n        rx={10}\n      />\n      <text\n        ref={idRef}\n        className={classes.text}\n        y={paddedHeight / 2}\n        x={paddedWidth * 2}\n        textAnchor=\"middle\"\n        alignmentBaseline=\"middle\"\n      >\n        {tspans}\n      </text>)\n    </g>\n  );\n}\n\nconst useStyles = makeStyles(\n  theme => ({\n    node: {\n      fill: (props) => {\n        let isTest = extractBool(props)\n        if (isTest) {\n            return '#FFF3D1';\n        } else {\n            return '#DCE8FA';\n        }\n      },\n      stroke: (props) => {\n          let isTest = extractBool(props)\n          if (isTest) {\n              return '#FFE59E';\n          } else {\n              return '#9BB3D6';\n          }\n      },\n    },\n    edge: {\n      strokeWidth: 2,\n    },\n    path: {\n      strokeWidth: 2,\n    },\n    text: {\n      fill: () => {\n        if (theme.palette.type === \"light\" ) {\n          return 'black';\n        } else {\n          return theme.palette.primary.contrastText;\n        }\n      },\n    },\n  }),\n  { name: 'BackstageDependencyGraphDefaultNode' },\n);\n\nfunction extractBool(props: { isTest?: boolean; }) {\n    if (props.isTest) {\n        return true;\n    } else {\n        return false;\n    }\n}\n"],"names":["TopologyComponent","topo","setTopo","useState","useEffect","fetch","then","response","console","log","text","data","name","useEntity","entity","metadata","toLowerCase","rawData","JSON","parse","InfoCard","title","edges","map","f","t","from","to","filter","app","stringify","nodes","node","n","id","forEach","e","push","DependencyGraph","showArrowHeads","renderNode","CustomNodeRenderer","direction","DependencyGraphTypes","Direction","LEFT_RIGHT","width","setWidth","React","height","setHeight","idRef","current","renderedHeight","renderedWidth","getBBox","Math","round","paddedWidth","padding","paddedHeight","sha","commit_sha","length","substring","dep","deployment_state","tspans","resourceTemplate","target","cluster","namespace","saas","l","i","tspan","x","y","fontWeight","classes","useStyles","isTest","g","rect","className","rx","ref","textAnchor","alignmentBaseline","makeStyles","theme","fill","props","extractBool","stroke","edge","strokeWidth","path","palette","type","primary","contrastText"],"sourceRoot":""}