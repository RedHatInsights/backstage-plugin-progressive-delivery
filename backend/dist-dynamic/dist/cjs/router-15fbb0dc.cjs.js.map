{"version":3,"file":"router-15fbb0dc.cjs.js","sources":["../../src/service/router.ts"],"sourcesContent":["import { errorHandler, loadBackendConfig } from '@backstage/backend-common';\nimport express from 'express';\nimport Router from 'express-promise-router';\nimport { Logger } from 'winston';\n\nexport interface RouterOptions {\n  logger: Logger;\n}\n\nexport async function createRouter(\n  options: RouterOptions,\n): Promise<express.Router> {\n  const { logger } = options;\n\n  const router = Router();\n  router.use(express.json());\n\n  router.get('/healthcheck', (_, response) => {\n    logger.info('PONG!');\n    response.json({ status: 'ok' });\n  });\n  router.get('/topo', (_, response) => {\n    loadBackendConfig({logger: logger, argv: []})\n      .then((config) => {\n        response.sendFile(config.getString('progressive-delivery.saas-promotions-json'));\n    }).catch((error) => {\n        console.log(\"No config\");\n        console.log(error);\n        response.sendStatus(500);\n      });\n  })\n  router.use(errorHandler());\n  return router;\n}\n\n"],"names":["Router","express","loadBackendConfig","errorHandler"],"mappings":";;;;;;;;;;;AASA,eAAsB,aACpB,OACyB,EAAA;AACzB,EAAM,MAAA,EAAE,QAAW,GAAA,OAAA,CAAA;AAEnB,EAAA,MAAM,SAASA,0BAAO,EAAA,CAAA;AACtB,EAAO,MAAA,CAAA,GAAA,CAAIC,2BAAQ,CAAA,IAAA,EAAM,CAAA,CAAA;AAEzB,EAAA,MAAA,CAAO,GAAI,CAAA,cAAA,EAAgB,CAAC,CAAA,EAAG,QAAa,KAAA;AAC1C,IAAA,MAAA,CAAO,KAAK,OAAO,CAAA,CAAA;AACnB,IAAA,QAAA,CAAS,IAAK,CAAA,EAAE,MAAQ,EAAA,IAAA,EAAM,CAAA,CAAA;AAAA,GAC/B,CAAA,CAAA;AACD,EAAA,MAAA,CAAO,GAAI,CAAA,OAAA,EAAS,CAAC,CAAA,EAAG,QAAa,KAAA;AACnC,IAAkBC,+BAAA,CAAA,EAAC,QAAgB,IAAM,EAAA,IAAG,CAAA,CACzC,IAAK,CAAA,CAAC,MAAW,KAAA;AAChB,MAAA,QAAA,CAAS,QAAS,CAAA,MAAA,CAAO,SAAU,CAAA,2CAA2C,CAAC,CAAA,CAAA;AAAA,KAClF,CAAA,CAAE,KAAM,CAAA,CAAC,KAAU,KAAA;AAChB,MAAA,OAAA,CAAQ,IAAI,WAAW,CAAA,CAAA;AACvB,MAAA,OAAA,CAAQ,IAAI,KAAK,CAAA,CAAA;AACjB,MAAA,QAAA,CAAS,WAAW,GAAG,CAAA,CAAA;AAAA,KACxB,CAAA,CAAA;AAAA,GACJ,CAAA,CAAA;AACD,EAAO,MAAA,CAAA,GAAA,CAAIC,4BAAc,CAAA,CAAA;AACzB,EAAO,OAAA,MAAA,CAAA;AACT;;;;"}